steps:
- bash: |
   if [ -f extensions.csproj ]
       then
           dotnet build extensions.csproj --output ./bin
       fi
  displayName: 'Build Extensions'

- task: NodeTool@0
  displayName: 'Use Node 10.14.1'
  inputs:
    versionSpec: 10.14.1

- task: Npm@1
  displayName: 'Install Dependencies'
  inputs:
    workingDir: '$(System.DefaultWorkingDirectory)'
    verbose: false

- task: Npm@1
  displayName: 'Run build Script'
  inputs:
    command: custom
    workingDir: '$(System.DefaultWorkingDirectory)'
    verbose: false
    customCommand: 'run build --if-present'

- task: Npm@1
  displayName: 'npm custom'
  inputs:
    command: custom
    workingDir: '$(System.DefaultWorkingDirectory)'
    verbose: false
    customCommand: 'prune --production'

- task: ArchiveFiles@2
  displayName: 'Archive $(System.DefaultWorkingDirectory)'
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveFile: '$(Build.BuildId).zip'

- script: |
   pwd
   ls -l
   
  displayName: 'Command Line Script'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/$(Build.BuildId).zip'
    
steps:
- task: AzureFunctionApp@1
  displayName: 'Azure Function App Deploy: mohasinfunc'
  inputs:
    azureSubscription: $(var_service_connection)
    appType: $(var_apptype)
    appName: $(var_appname)
    package: $(var_package)
    runtimeStack: $(var_runtimestack)
